@using CSGOBeast.Data.Models
@using CSGOBeast.Web.ViewModels.Shop
@model CSGOBeast.Web.ViewModels.Shop.ShopViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 well">
        <form method="GET" style="text-align:center;">
            <input id="search-name" name="name" placeholder="Filter by name or wear." class="filter-skins-store" style="width:200px" type="text">
            <input id="search-min-price" step="0.01" name="minprice" placeholder="Min. price" style="width:80px" type="number">
            <input id="search-max-price" step="0.01" name="maxprice" placeholder="Max. price" style="width:80px" type="number">
            @Html.EnumDropDownListFor(model => model.GroupType, "group", htmlAttributes: new { id = "item-group-type" })
            @Html.EnumDropDownListFor(model => model.Quality, "quality", htmlAttributes: new { id = "item-quality-type" })
            @Html.EnumDropDownListFor(model => model.WeaponType, "wep", htmlAttributes: new { id = "item-weapon-type" })
            @Html.EnumDropDownListFor(model => model.Classification, "rarity", htmlAttributes: new { id = "item-classification-type" })
            <select id="order-by" name="order" style="color:black;">
                <option value="highestprice">Highest Price</option>
                <option value="lowestprice">Lowest Price</option>
            </select>
            <input type="submit" id="search-submit" value="Search" class="btn btn-success btn-xs">
        </form>
    </div>
</div>
<div class="row">
    <div class="col-md-12 well">
        <h2 style="float:right;">$<span class="user-credits">@Model.User.Balance</span></h2>
        <h1>Store</h1>
        <p>Welcome to the CS:GO Beast skin store, from here you are able to buy any of the skins that we currently have in our inventory, given you have enough balance to cover the purchase. After clicking on "Buy" on a weapon of your choice it will add a trade offer to your wallet page, and from there you will be able to retrieve it and have a trade offer sent to your account.</p>
    </div>
    <div class="col-md-1"></div>
</div>

<div class="row">
    @foreach (var item in this.Model.Items)
    {
        @Html.Partial("_ItemDetails", item)
    }
    @if (this.Model.Items.Count() == 0)
    {
        <div class="text-center">
            <h3>No items to display!</h3>
        </div>
    }
</div>
<div class="text-center">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
            {
            <li>
                <a class="query-link" href="/Shop/Items/@(Model.CurrentPage - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
            {
                var className = string.Empty;
                if (Model.CurrentPage == i)
                {
                    className = "active";
                }
                <li class="@className"><a class="query-link" href="/Shop/Items/@i">@i</a></li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
            {
            <li>
                <a class="query-link" href="/Shop/Items/@(Model.CurrentPage+1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</div>

@Scripts.Render("~/bundles/shopQuery")
